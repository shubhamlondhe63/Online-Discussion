{"ast":null,"code":"var _jsxFileName = \"/home/epps/Backup/React/Online-Discussion/client/src/components/posts/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport PostItem from \"./PostItem\";\nimport PostForm from \"./PostForm\";\nimport { getPosts } from \"../../actions/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = _ref => {\n  _s();\n\n  let {\n    getPosts,\n    post: {\n      posts,\n      loading\n    }\n  } = _ref;\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n  return loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-heading\",\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas-fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this), \" Welcome to the community!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n        post: post\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Posts, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Posts;\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPosts\n})(Posts);\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/home/epps/Backup/React/Online-Discussion/client/src/components/posts/Posts.js"],"names":["React","useEffect","PropTypes","connect","Spinner","PostItem","PostForm","getPosts","Posts","post","posts","loading","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;;AAEA,MAAMC,KAAK,GAAG,QAA4C;AAAA;;AAAA,MAA3C;AAAED,IAAAA,QAAF;AAAYE,IAAAA,IAAI,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAlB,GAA2C;AACzDV,EAAAA,SAAS,CAAC,MAAM;AACfM,IAAAA,QAAQ;AACR,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,SAAOI,OAAO,gBACb,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADa,gBAGb;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACC;AAAI,MAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA,8BACC;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAKC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YALD,eAMC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACED,KAAK,CAACE,GAAN,CAAWH,IAAD,iBACV,QAAC,QAAD;AAAyB,QAAA,IAAI,EAAEA;AAA/B,SAAeA,IAAI,CAACI,GAApB;AAAA;AAAA;AAAA;AAAA,cADA;AADF;AAAA;AAAA;AAAA;AAAA,YAND;AAAA;AAAA;AAAA;AAAA;AAAA,UAHD;AAgBA,CArBD;;GAAML,K;;KAAAA,K;AAuBNA,KAAK,CAACM,SAAN,GAAkB;AACjBP,EAAAA,QAAQ,EAAEL,SAAS,CAACa,IAAV,CAAeC,UADR;AAEjBP,EAAAA,IAAI,EAAEP,SAAS,CAACe,MAAV,CAAiBD;AAFN,CAAlB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AACnCV,EAAAA,IAAI,EAAEU,KAAK,CAACV;AADuB,CAAZ,CAAxB;;AAIA,eAAeN,OAAO,CAACe,eAAD,EAAkB;AAAEX,EAAAA;AAAF,CAAlB,CAAP,CAAuCC,KAAvC,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport PostItem from \"./PostItem\";\nimport PostForm from \"./PostForm\";\nimport { getPosts } from \"../../actions/post\";\n\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\n\tuseEffect(() => {\n\t\tgetPosts();\n\t}, [getPosts]);\n\n\treturn loading ? (\n\t\t<Spinner />\n\t) : (\n\t\t<div className='container'>\n\t\t\t<h1 className='large text-heading'>Posts</h1>\n\t\t\t<p className='lead'>\n\t\t\t\t<i className='fas-fa-user' /> Welcome to the community!\n\t\t\t</p>\n\t\t\t<PostForm />\n\t\t\t<div className='posts'>\n\t\t\t\t{posts.map((post) => (\n\t\t\t\t\t<PostItem key={post._id} post={post} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nPosts.propTypes = {\n\tgetPosts: PropTypes.func.isRequired,\n\tpost: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\tpost: state.post,\n});\n\nexport default connect(mapStateToProps, { getPosts })(Posts);\n"]},"metadata":{},"sourceType":"module"}