{"ast":null,"code":"var _jsxFileName = \"/home/epps/Backup/React/Online-Discussion/client/src/components/profile/ProfileGithub.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getGithubRepos } from \"../../actions/profile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfileGithub(_ref) {\n  _s();\n\n  let {\n    username,\n    getGithubRepos,\n    repos\n  } = _ref;\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos, username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-github\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-heading my-1\",\n      children: \"Github Repos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this), repos === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this) : repos.map(repo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repo bg-white p-1 my-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"text-heading\",\n            href: repo.html_url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: repo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: repo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-heading\",\n            children: [\"Stars: \", repo.stargazers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-dark\",\n            children: [\"Watchers: \", repo.watchers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-light\",\n            children: [\"Forks: \", repo.forks_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)]\n    }, repo._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 6\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ProfileGithub, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ProfileGithub;\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGithub);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileGithub\");","map":{"version":3,"sources":["/home/epps/Backup/React/Online-Discussion/client/src/components/profile/ProfileGithub.js"],"names":["React","useEffect","PropTypes","connect","Spinner","getGithubRepos","ProfileGithub","username","repos","map","repo","html_url","name","description","stargazers_count","watchers_count","forks_count","_id","propTypes","func","isRequired","array","string","mapStateToProps","state","profile"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;;AAEA,SAASC,aAAT,OAA4D;AAAA;;AAAA,MAArC;AAAEC,IAAAA,QAAF;AAAYF,IAAAA,cAAZ;AAA4BG,IAAAA;AAA5B,GAAqC;AAC3DP,EAAAA,SAAS,CAAC,MAAM;AACfI,IAAAA,cAAc,CAACE,QAAD,CAAd;AACA,GAFQ,EAEN,CAACF,cAAD,EAAiBE,QAAjB,CAFM,CAAT;AAIA,sBACC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACC;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAEEC,KAAK,KAAK,IAAV,gBACA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADA,GAGAA,KAAK,CAACC,GAAN,CAAWC,IAAD,iBACT;AAAoB,MAAA,SAAS,EAAC,wBAA9B;AAAA,8BACC;AAAA,gCACC;AAAA,iCACC;AACC,YAAA,SAAS,EAAC,cADX;AAEC,YAAA,IAAI,EAAEA,IAAI,CAACC,QAFZ;AAGC,YAAA,MAAM,EAAC,QAHR;AAIC,YAAA,GAAG,EAAC,qBAJL;AAAA,sBAMED,IAAI,CAACE;AANP;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADD,eAWC;AAAA,oBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,gBAXD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAcC;AAAA,+BACC;AAAA,kCACC;AAAI,YAAA,SAAS,EAAC,qBAAd;AAAA,kCACSH,IAAI,CAACI,gBADd;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAIC;AAAI,YAAA,SAAS,EAAC,kBAAd;AAAA,qCACYJ,IAAI,CAACK,cADjB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJD,eAOC;AAAI,YAAA,SAAS,EAAC,mBAAd;AAAA,kCACSL,IAAI,CAACM,WADd;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAdD;AAAA,OAAUN,IAAI,CAACO,GAAf;AAAA;AAAA;AAAA;AAAA,YADD,CALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAuCA;;GA5CQX,a;;KAAAA,a;AA8CTA,aAAa,CAACY,SAAd,GAA0B;AACzBb,EAAAA,cAAc,EAAEH,SAAS,CAACiB,IAAV,CAAeC,UADN;AAEzBZ,EAAAA,KAAK,EAAEN,SAAS,CAACmB,KAAV,CAAgBD,UAFE;AAGzBb,EAAAA,QAAQ,EAAEL,SAAS,CAACoB,MAAV,CAAiBF;AAHF,CAA1B;;AAMA,MAAMG,eAAe,GAAIC,KAAD,KAAY;AACnChB,EAAAA,KAAK,EAAEgB,KAAK,CAACC,OAAN,CAAcjB;AADc,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACoB,eAAD,EAAkB;AAAElB,EAAAA;AAAF,CAAlB,CAAP,CAA6CC,aAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getGithubRepos } from \"../../actions/profile\";\n\nfunction ProfileGithub({ username, getGithubRepos, repos }) {\n\tuseEffect(() => {\n\t\tgetGithubRepos(username);\n\t}, [getGithubRepos, username]);\n\n\treturn (\n\t\t<div className='profile-github'>\n\t\t\t<h2 className='text-heading my-1'>Github Repos</h2>\n\t\t\t{repos === null ? (\n\t\t\t\t<Spinner />\n\t\t\t) : (\n\t\t\t\trepos.map((repo) => (\n\t\t\t\t\t<div key={repo._id} className='repo bg-white p-1 my-1'>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\tclassName='text-heading'\n\t\t\t\t\t\t\t\t\thref={repo.html_url}\n\t\t\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\t\t\trel='noopener noreferrer'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{repo.name}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t<p>{repo.description}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li className='badge badge-heading'>\n\t\t\t\t\t\t\t\t\tStars: {repo.stargazers_count}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li className='badge badge-dark'>\n\t\t\t\t\t\t\t\t\tWatchers: {repo.watchers_count}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li className='badge badge-light'>\n\t\t\t\t\t\t\t\t\tForks: {repo.forks_count}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t))\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nProfileGithub.propTypes = {\n\tgetGithubRepos: PropTypes.func.isRequired,\n\trepos: PropTypes.array.isRequired,\n\tusername: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n\trepos: state.profile.repos,\n});\n\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\n"]},"metadata":{},"sourceType":"module"}