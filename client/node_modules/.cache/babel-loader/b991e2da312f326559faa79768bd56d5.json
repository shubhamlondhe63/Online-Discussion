{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { GET_PROFILE, GET_PROFILES, PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE, ACCOUNT_DELETED, GET_REPOS, NO_REPOS } from \"./types\"; // Get current user's profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get(\"/api/profile/me\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: CLEAR_PROFILE\n    });\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get all profiles\n\nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get(\"/api/profile\");\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get profile by ID\n\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get GitHub repos\n\nexport const getGithubRepos = username => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: NO_REPOS\n    });\n  }\n}; // Create or update profile\n\nexport const createProfile = function (formData) {\n  let edit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return async dispatch => {\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const res = await axios.post(\"/api/profile\", formData, config);\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data\n      });\n      dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n      }\n\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  };\n}; // Add Experience\n\nexport const addExperience = formData => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.put(\"/api/profile/experience\", formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Added\", \"success\"));\n    return res.data;\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Education\n\nexport const addEducation = formData => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.put(\"/api/profile/education\", formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education Added\", \"success\"));\n    return res.data;\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete Experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete Education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete account & profile\n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm(\"Are you sure? This can NOT be undone!\")) {\n    try {\n      await axios.delete(\"/api/profile\");\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert(\"Your account has been permanently deleted\"));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/home/epps/Backup/React/Online-Discussion/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","GET_PROFILES","PROFILE_ERROR","UPDATE_PROFILE","CLEAR_PROFILE","ACCOUNT_DELETED","GET_REPOS","NO_REPOS","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getProfiles","getProfileById","userId","getGithubRepos","username","createProfile","formData","edit","config","headers","post","errors","forEach","error","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { setAlert } from \"./alert\";\n\nimport {\n\tGET_PROFILE,\n\tGET_PROFILES,\n\tPROFILE_ERROR,\n\tUPDATE_PROFILE,\n\tCLEAR_PROFILE,\n\tACCOUNT_DELETED,\n\tGET_REPOS,\n\tNO_REPOS,\n} from \"./types\";\n\n// Get current user's profile\nexport const getCurrentProfile = () => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.get(\"/api/profile/me\");\n\n\t\tdispatch({\n\t\t\ttype: GET_PROFILE,\n\t\t\tpayload: res.data,\n\t\t});\n\t} catch (err) {\n\t\tdispatch({ type: CLEAR_PROFILE });\n\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t\tpayload: {\n\t\t\t\tmsg: err.response.statusText,\n\t\t\t\tstatus: err.response.status,\n\t\t\t},\n\t\t});\n\t}\n};\n\n// Get all profiles\nexport const getProfiles = () => async (dispatch) => {\n\tdispatch({ type: CLEAR_PROFILE });\n\n\ttry {\n\t\tconst res = await axios.get(\"/api/profile\");\n\n\t\tdispatch({\n\t\t\ttype: GET_PROFILES,\n\t\t\tpayload: res.data,\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t\tpayload: {\n\t\t\t\tmsg: err.response.statusText,\n\t\t\t\tstatus: err.response.status,\n\t\t\t},\n\t\t});\n\t}\n};\n\n// Get profile by ID\nexport const getProfileById = (userId) => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.get(`/api/profile/user/${userId}`);\n\n\t\tdispatch({\n\t\t\ttype: GET_PROFILE,\n\t\t\tpayload: res.data,\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t\tpayload: {\n\t\t\t\tmsg: err.response.statusText,\n\t\t\t\tstatus: err.response.status,\n\t\t\t},\n\t\t});\n\t}\n};\n\n// Get GitHub repos\nexport const getGithubRepos = (username) => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.get(`/api/profile/github/${username}`);\n\n\t\tdispatch({\n\t\t\ttype: GET_REPOS,\n\t\t\tpayload: res.data,\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: NO_REPOS,\n\t\t});\n\t}\n};\n\n// Create or update profile\nexport const createProfile =\n\t(formData, edit = false) =>\n\tasync (dispatch) => {\n\t\ttry {\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tconst res = await axios.post(\"/api/profile\", formData, config);\n\n\t\t\tdispatch({\n\t\t\t\ttype: GET_PROFILE,\n\t\t\t\tpayload: res.data,\n\t\t\t});\n\n\t\t\tdispatch(\n\t\t\t\tsetAlert(\n\t\t\t\t\tedit ? \"Profile Updated\" : \"Profile Created\",\n\t\t\t\t\t\"success\"\n\t\t\t\t)\n\t\t\t);\n\t\t} catch (err) {\n\t\t\tconst errors = err.response.data.errors;\n\n\t\t\tif (errors) {\n\t\t\t\terrors.forEach((error) =>\n\t\t\t\t\tdispatch(setAlert(error.msg, \"danger\"))\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tdispatch({\n\t\t\t\ttype: PROFILE_ERROR,\n\t\t\t\tpayload: {\n\t\t\t\t\tmsg: err.response.statusText,\n\t\t\t\t\tstatus: err.response.status,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t};\n\n// Add Experience\nexport const addExperience = (formData) => async (dispatch) => {\n\ttry {\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t};\n\n\t\tconst res = await axios.put(\n\t\t\t\"/api/profile/experience\",\n\t\t\tformData,\n\t\t\tconfig\n\t\t);\n\n\t\tdispatch({\n\t\t\ttype: UPDATE_PROFILE,\n\t\t\tpayload: res.data,\n\t\t});\n\n\t\tdispatch(setAlert(\"Experience Added\", \"success\"));\n\t\treturn res.data;\n\t} catch (err) {\n\t\tconst errors = err.response.data.errors;\n\n\t\tif (errors) {\n\t\t\terrors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n\t\t}\n\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t\tpayload: {\n\t\t\t\tmsg: err.response.statusText,\n\t\t\t\tstatus: err.response.status,\n\t\t\t},\n\t\t});\n\t}\n};\n\n// Add Education\nexport const addEducation = (formData) => async (dispatch) => {\n\ttry {\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t};\n\n\t\tconst res = await axios.put(\"/api/profile/education\", formData, config);\n\n\t\tdispatch({\n\t\t\ttype: UPDATE_PROFILE,\n\t\t\tpayload: res.data,\n\t\t});\n\n\t\tdispatch(setAlert(\"Education Added\", \"success\"));\n\t\treturn res.data;\n\t} catch (err) {\n\t\tconst errors = err.response.data.errors;\n\n\t\tif (errors) {\n\t\t\terrors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n\t\t}\n\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t\tpayload: {\n\t\t\t\tmsg: err.response.statusText,\n\t\t\t\tstatus: err.response.status,\n\t\t\t},\n\t\t});\n\t}\n};\n\n// Delete Experience\nexport const deleteExperience = (id) => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.delete(`/api/profile/experience/${id}`);\n\n\t\tdispatch({\n\t\t\ttype: UPDATE_PROFILE,\n\t\t\tpayload: res.data,\n\t\t});\n\n\t\tdispatch(setAlert(\"Experience Removed\", \"success\"));\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t\tpayload: {\n\t\t\t\tmsg: err.response.statusText,\n\t\t\t\tstatus: err.response.status,\n\t\t\t},\n\t\t});\n\t}\n};\n\n// Delete Education\nexport const deleteEducation = (id) => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.delete(`/api/profile/education/${id}`);\n\n\t\tdispatch({\n\t\t\ttype: UPDATE_PROFILE,\n\t\t\tpayload: res.data,\n\t\t});\n\n\t\tdispatch(setAlert(\"Education Removed\", \"success\"));\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: PROFILE_ERROR,\n\t\t\tpayload: {\n\t\t\t\tmsg: err.response.statusText,\n\t\t\t\tstatus: err.response.status,\n\t\t\t},\n\t\t});\n\t}\n};\n\n// Delete account & profile\nexport const deleteAccount = () => async (dispatch) => {\n\tif (window.confirm(\"Are you sure? This can NOT be undone!\")) {\n\t\ttry {\n\t\t\tawait axios.delete(\"/api/profile\");\n\n\t\t\tdispatch({ type: CLEAR_PROFILE });\n\t\t\tdispatch({ type: ACCOUNT_DELETED });\n\n\t\t\tdispatch(setAlert(\"Your account has been permanently deleted\"));\n\t\t} catch (err) {\n\t\t\tdispatch({\n\t\t\t\ttype: PROFILE_ERROR,\n\t\t\t\tpayload: {\n\t\t\t\t\tmsg: err.response.statusText,\n\t\t\t\t\tstatus: err.response.status,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}